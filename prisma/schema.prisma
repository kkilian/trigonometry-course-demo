// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Problem {
  id            String   @id @default(uuid())
  question      String
  answer        String?
  difficulty    Int      @default(3) // 1-5 scale
  points        Int?
  examType      String   // "podstawa" lub "rozszerzona"
  year          Int
  month         String?  // np. "maj", "czerwiec"
  problemNumber String?  // np. "1.2", "3a"
  imageUrl      String?
  explanation   String?

  // Relacje
  categories    CategoryProblem[]
  steps         Step[]
  hints         Hint[]

  // Metadane
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Dla przysz≈Çego AI/vector search
  embedding     String?  // JSON array of floats

  @@index([examType, year])
  @@index([difficulty])
}

model Category {
  id          String   @id @default(uuid())
  name        String   @unique
  slug        String   @unique
  parentId    String?
  parent      Category?  @relation("CategoryHierarchy", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryHierarchy")

  problems    CategoryProblem[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([slug])
}

model CategoryProblem {
  problemId   String
  categoryId  String
  problem     Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([problemId, categoryId])
}

model Step {
  id          String   @id @default(uuid())
  problemId   String
  problem     Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)

  stepNumber  Int
  content     String
  latex       String?
  explanation String?

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([problemId, stepNumber])
}

model Hint {
  id          String   @id @default(uuid())
  problemId   String
  problem     Problem  @relation(fields: [problemId], references: [id], onDelete: Cascade)

  hintNumber  Int
  content     String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([problemId, hintNumber])
}
